{"version":3,"sources":["utils/request.ts","components/Apple.tsx","services/user.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["instance","axios","create","baseURL","process","REACT_APP_API_URL","timeout","interceptors","request","use","config","error","Promise","reject","response","res","resolve","data","option","method","url","Apple","handleLogin","a","username","password","console","log","handleLogout","onClick","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAOMA,E,OAAWC,EAAMC,OAAO,CAC5BC,QAASC,6IAAYC,kBACrBC,QAAS,MAaXN,EAASO,aAAaC,QAAQC,KAC5B,SAACC,GAGC,OAAOA,KAET,SAACC,GAAD,OAAWC,QAAQC,OAAOF,MAI5BX,EAASO,aAAaO,SAASL,KAE7B,SAACM,GACC,OAAOH,QAAQI,QAAQD,EAAIE,SAG7B,SAACN,GACC,OAAOC,QAAQC,OAAOF,MAkBX,eAORO,GACH,OAAOlB,EAAS,CACdmB,OAAQ,OACRC,IAAKF,EAAOE,IACZH,KAAMC,EAAOD,QCpCJI,EA7BD,WAEZ,IAAMC,EAAW,uCAAG,4BAAAC,EAAA,+ECqBbf,EAAa,CAClBY,IAAK,cACLH,KDrBiC,CAAEO,SAAU,OAAQC,SAAU,YAF7C,OAEVV,EAFU,OAGhBW,QAAQC,IAAI,qBAAsBZ,GAHlB,gDAKhBW,QAAQC,IAAI,uBAAZ,MALgB,yDAAH,qDAUXC,EAAY,uCAAG,4BAAAL,EAAA,+ECqBdf,EAAa,CAClBY,IAAK,iBDtBc,OAEXL,EAFW,OAGjBW,QAAQC,IAAI,sBAAuBZ,GAHlB,gDAKjBW,QAAQC,IAAI,wBAAZ,MALiB,yDAAH,qDASlB,OACE,gCACE,wBAAQE,QAAS,kBAAMP,KAAvB,0BACA,wBAAQO,QAAS,kBAAMD,KAAvB,0CEfSE,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCOSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bd503bef.chunk.js","sourcesContent":["/**\n * axios封装\n * 请求拦截、响应拦截、错误统一处理\n */\nimport axios from 'axios';\n// import baseUrl from \"./baseUrl\";\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  timeout: 30000,\n  // 如果要使用Content-Type:application/x-www-form-urlencoded; 打开这里的注释即可\n  // transformRequest: [\n  //   function(data, headers) {\n  //     return Qs.stringify(data);\n  //   }\n  // ]\n});\n\n/**\n * 请求拦截器\n * 每次请求前，如果存在token则在请求头中携带token\n */\ninstance.interceptors.request.use(\n  (config) => {\n    // config.withCredentials = false;\n    // config.headers.Authorization = localStorage.getItem(\"token\") || \"TODO\";\n    return config;\n  },\n  (error) => Promise.reject(error),\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n  // 请求成功\n  (res) => {\n    return Promise.resolve(res.data);\n  },\n  // 请求失败\n  (error) => {\n    return Promise.reject(error);\n  },\n);\n\n/**\n * 约束request入参\n */\ntype RequestOption = {\n  /**\n   * 请求路径\n   */\n  url: string;\n  /**\n   * 请求参数\n   */\n  data?: any;\n};\n\nexport default {\n  get(option: RequestOption): Promise<any> {\n    return instance({\n      url: option.url,\n      params: option.data,\n    });\n  },\n  post(option: RequestOption): Promise<any> {\n    return instance({\n      method: 'POST',\n      url: option.url,\n      data: option.data,\n    });\n  },\n  delete(option: RequestOption): Promise<any> {\n    return instance({\n      method: 'DELETE',\n      url: option.url,\n      data: option.data,\n    });\n  },\n  put(option: RequestOption): Promise<any> {\n    return instance({\n      method: 'PUT',\n      url: option.url,\n      data: option.data,\n    });\n  },\n  patch(option: RequestOption): Promise<any> {\n    return instance({\n      method: 'PATCH',\n      url: option.url,\n      data: option.data,\n    });\n  },\n};\n","import React from 'react';\nimport { accountLogin, accountLogout } from '../services/user';\n\nconst Apple = () => {\n  /**登录 */\n  const handleLogin = async () => {\n    try {\n      const res = await accountLogin({ username: 'lisa', password: '123456' });\n      console.log('handleLogin -> res', res);\n    } catch (error) {\n      console.log('handleLogin -> error', error);\n    }\n  };\n\n  /**退出登录 */\n  const handleLogout = async () => {\n    try {\n      const res = await accountLogout();\n      console.log('handleLogout -> res', res);\n    } catch (error) {\n      console.log('handleLogout -> error', error);\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={() => handleLogin()}>登录</button>\n      <button onClick={() => handleLogout()}>退出登录</button>\n    </div>\n  );\n};\n\nexport default Apple;\n","import request from '../utils/request';\nimport { Result } from './ResultType';\n\n/** 数据类型\n * -------------------------------------------------------------------------------- */\n\n/**登录接口入参 */\ntype LoginRequest = {\n  /**用户名 */\n  username: string;\n  /**密码 */\n  password: string;\n};\n\n/**登录接口出参 */\ntype LoginResponse = {\n  token: string;\n};\n\n/** 请求方法\n * -------------------------------------------------------------------------------- */\n\n/**\n * 登录\n */\nexport const accountLogin = (data: LoginRequest): Promise<Result<LoginResponse>> => {\n  return request.post({\n    url: '/user/login',\n    data,\n  });\n};\n\n/**\n * 退出登录\n */\nexport const accountLogout = (): Promise<Result<null>> => {\n  return request.post({\n    url: '/user/logout',\n  });\n};\n","import React from 'react';\nimport './App.css';\nimport Apple from './components/Apple';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Apple />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}